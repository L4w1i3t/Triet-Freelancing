const fs = require('fs');
const path = require('path');

// Load public environment variables from .env file
require('dotenv').config();

// Generate env-config.js from environment variables during build
const generateEnvConfig = () => {
  const envVars = {
    EMAILJS_SERVICE_ID: process.env.EMAILJS_SERVICE_ID || '',
    EMAILJS_TEMPLATE_ID_ADMIN: process.env.EMAILJS_TEMPLATE_ID_ADMIN || '',
    EMAILJS_TEMPLATE_ID_CUSTOMER: process.env.EMAILJS_TEMPLATE_ID_CUSTOMER || '',
    EMAILJS_PUBLIC_KEY: process.env.EMAILJS_PUBLIC_KEY || '',
    PP_CLIENT_ID: process.env.PP_CLIENT_ID || '',
    PP_API_BASE: process.env.PP_API_BASE || 'https://api.paypal.com'
  };

  const configContent = `// Environment Configuration
// This file is auto-generated during build process
// DO NOT edit this file manually

window.ENV_CONFIG = {
  EMAILJS_SERVICE_ID: '${envVars.EMAILJS_SERVICE_ID}',
  EMAILJS_TEMPLATE_ID_ADMIN: '${envVars.EMAILJS_TEMPLATE_ID_ADMIN}',
  EMAILJS_TEMPLATE_ID_CUSTOMER: '${envVars.EMAILJS_TEMPLATE_ID_CUSTOMER}',
  EMAILJS_PUBLIC_KEY: '${envVars.EMAILJS_PUBLIC_KEY}',
  PP_CLIENT_ID: '${envVars.PP_CLIENT_ID}',
  PP_API_BASE: '${envVars.PP_API_BASE}'
};

// Make variables available globally for backward compatibility
window.EMAILJS_SERVICE_ID = window.ENV_CONFIG.EMAILJS_SERVICE_ID;
window.EMAILJS_TEMPLATE_ID_ADMIN = window.ENV_CONFIG.EMAILJS_TEMPLATE_ID_ADMIN;
window.EMAILJS_TEMPLATE_ID_CUSTOMER = window.ENV_CONFIG.EMAILJS_TEMPLATE_ID_CUSTOMER;
window.EMAILJS_PUBLIC_KEY = window.ENV_CONFIG.EMAILJS_PUBLIC_KEY;
window.PP_CLIENT_ID = window.ENV_CONFIG.PP_CLIENT_ID;
window.PP_API_BASE = window.ENV_CONFIG.PP_API_BASE;`;

  const outputPath = path.join(__dirname, 'js', 'env-config.js');
  
  // Ensure the js directory exists
  const jsDir = path.dirname(outputPath);
  if (!fs.existsSync(jsDir)) {
    fs.mkdirSync(jsDir, { recursive: true });
  }

  fs.writeFileSync(outputPath, configContent);
  console.log('✅ Environment configuration generated successfully');
  
  // Log which variables were found/missing
  Object.entries(envVars).forEach(([key, value]) => {
    if (value) {
      console.log(`✅ ${key}: Set`);
    } else {
      console.log(`❌ ${key}: Missing or empty`);
    }
  });
};

generateEnvConfig();
